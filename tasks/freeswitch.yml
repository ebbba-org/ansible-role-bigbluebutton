---
- name: install AppArmor packages
  become: true
  package:
    name: ['apparmor-utils', 'auditd']
  when: not bbb_container_compat

- name: create AppArmor rules
  become: true
  template:
    src: freeswitch/freeswitch_apparmor_profile
    dest: /etc/apparmor.d/opt.freeswitch.bin.freeswitch
    mode: 0600
  when: not bbb_container_compat
  notify:
   - reload apparmor
   - restart freeswitch

- name: fix freeswitch systemd service permissions
  become: true
  file:
    path: /lib/systemd/system/freeswitch.service
    mode: '0644'
    owner: root
    group: root

- name: delete freeswitch file logging config
  become: true
  file:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/logfile.conf.xml
    state: absent
  notify: restart freeswitch

- name: add freeswitch module config
  become: true
  template:
    src: freeswitch/modules.conf.xml
    dest: /opt/freeswitch/etc/freeswitch/autoload_configs/modules.conf.xml
    mode: '0644'
    owner: freeswitch
    group: daemon
  notify: restart freeswitch

- name: add freeswitch syslog config
  become: true
  template:
    src: freeswitch/syslog.conf.xml
    dest: /opt/freeswitch/etc/freeswitch/autoload_configs/syslog.conf.xml
    mode: '0644'
    owner: freeswitch
    group: daemon
  notify: restart freeswitch

- name: deploy conference config
  become: true
  template:
    src: freeswitch/conference.conf.xml
    dest: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    mode: '0644'
    owner: freeswitch
    group: daemon
  notify: restart freeswitch

- name: set socket password
  become: true
  xml:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    xpath: /configuration/settings/param[@name='password']
    attribute: "value"
    value: "{{ bbb_freeswitch_socket_password }}"
  no_log: true
  notify: restart freeswitch

- name: configure CPU and IO Scheduling in FreeSWITCH service
  lineinfile:
    path: /lib/systemd/system/freeswitch.service
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    state: '{{ item.state }}'
    insertbefore: '^CPUSchedulingPriority='
  with_items:
    - line: 'CPUSchedulingPolicy=rr'
      regexp: '^#?CPUSchedulingPolicy='
      state: '{{ "present" if not bbb_container_compat | bool else "absent" }}'
    - line: 'IOSchedulingClass=realtime'
      regexp: '^#?IOSchedulingClass='
      state: '{{ "present" if not bbb_container_compat | bool else "absent" }}'
  notify:
  - restart freeswitch
  - reload systemd

- name: Set FreeSWITCH local IPv4
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="local_ip_v4=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="local_ip_v4={{ ansible_default_ipv4.address }}"/>'
  notify: restart freeswitch

- name: configure IPv6-Support in freeswitch
  block:
    - name: configure listen-ip in event_socket.conf.xml
      become: true
      ansible.builtin.xml:
        path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
        xpath: '/configuration/settings/param[@name="listen-ip"]'
        attribute: 'value'
        value: "{{ '::' if bbb_freeswitch_ipv6 | bool else '127.0.0.1' }}"
      notify: restart freeswitch

    - name: stat ipv6 sip_profiles
      ansible.builtin.stat:
        path: "{{ item + '.disabled' if bbb_freeswitch_ipv6 | bool else item }}"
      register: ipv6_sip_profiles
      loop:
        - /opt/freeswitch/etc/freeswitch/sip_profiles/external-ipv6.xml
        - /opt/freeswitch/etc/freeswitch/sip_profiles/internal-ipv6.xml
      loop_control:
        label: "{{ item if bbb_freeswitch_ipv6 | bool else item + '.disabled' }}"

    - name: manage ipv6 sip_profiles
      become: true
      ansible.builtin.command: |
        mv
          "{{ sip_profile.item + '.disabled' if bbb_freeswitch_ipv6 | bool else sip_profile.item }}"
          "{{ sip_profile.item if bbb_freeswitch_ipv6 | bool else sip_profile.item + '.disabled' }}"
      when: sip_profile.stat.exists
      loop: "{{ ipv6_sip_profiles.results }}"
      loop_control:
        loop_var: sip_profile
        label: "{{ sip_profile.item if bbb_freeswitch_ipv6 | bool else sip_profile.item + '.disabled' }}"
      notify: restart freeswitch

- name: FreeSWITCH dialplan quality
  replace:
    path: /opt/freeswitch/conf/dialplan/default/bbb_conference.xml
    regexp: '<action application="conference" data="\$1@.*"\/>'
    replace: '<action application="conference" data="$1@{{ bbb_dialplan_quality }}"/>'
  notify: restart freeswitch

- name: FreeSWITCH dialplan quality (echo)
  replace:
    path: /opt/freeswitch/conf/dialplan/default/bbb_echo_to_conference.xml
    regexp: '<action application="conference" data="\${vbridge}@.*"\/>'
    replace: '<action application="conference" data="${vbridge}@{{ bbb_dialplan_quality }}"/>'
  notify: restart freeswitch

- name: FreeSWITCH dialplan energy-level
  replace:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    after: '<profile name="{{ bbb_dialplan_quality }}">'
    before: '</profile>'
    regexp: '<param name="energy-level" value=".*"\/>'
    replace: '<param name="energy-level" value="{{ bbb_dialplan_energy_level }}"/>'
  notify: restart freeswitch

- name: FreeSWITCH dialplan comfort-noise
  replace:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    after:   '<profile name="{{ bbb_dialplan_quality }}">'
    before:  '</profile>'
    regexp:  '<param name="comfort-noise" value=".*"\/>'
    replace: '<param name="comfort-noise" value="{{ bbb_dialplan_comfort_noise }}"/>'
  notify: restart freeswitch

- name: FreeSWITCH external ip (rtp)
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="external_rtp_ip=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="external_rtp_ip={{ bbb_freeswitch_external_ip }}"/>'
  notify: restart freeswitch

- name: FreeSWITCH external ip (sip)
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="external_sip_ip=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="external_sip_ip={{ bbb_freeswitch_external_ip }}"/>'
  notify: restart freeswitch

- name: fix fs_clibbb to accept additional parameters
  become: true
  lineinfile:
    path: /usr/local/bin/fs_clibbb
    regexp: "^/opt/freeswitch/bin/fs_cli"
    line: "/opt/freeswitch/bin/fs_cli -p $(xmlstarlet sel -t -m 'configuration/settings/param[@name=\"password\"]' -v @value /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml) \"$@\""

- name: configure IP {{ bbb_freeswitch_ip_address }} for wss-binding of FreeSWITCH
  lineinfile:
    path: /opt/freeswitch/conf/sip_profiles/external.xml
    regexp: "<param name=\"wss-binding\""
    line: "    <param name=\"wss-binding\" value=\"{{ bbb_freeswitch_ip_address }}:7443\"/>"
  notify: restart freeswitch

- name: Flush Handler
  meta: flush_handlers

- name: configure different mute sound
  become: true
  copy:
    src: sounds/{{ item }}/conf-muted.wav
    dest: /opt/freeswitch/share/freeswitch/sounds/en/us/callie/conference/{{ item }}/
    mode: '0644'
    owner: freeswitch
    group: daemon
  with_items:
    - 48000
    - 32000
    - 16000
    - 8000
  when: bbb_freeswitch_muted_sound | bool

- name: configure different unmute sound
  become: true
  copy:
    src: sounds/{{ item }}/conf-unmuted.wav
    dest: /opt/freeswitch/share/freeswitch/sounds/en/us/callie/conference/{{ item }}/
    mode: '0644'
    owner: freeswitch
    group: daemon
  with_items:
    - 48000
    - 32000
    - 16000
    - 8000
  when: bbb_freeswitch_unmuted_sound | bool
