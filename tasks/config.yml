---
- name: register current bbb properties
  slurp:
    src: /etc/bigbluebutton/bbb-web.properties
  register: properties

- name: set bbb hostname
  command: "bbb-conf --setip {{ bbb_hostname }}"
  become: true
  when: (properties['content'] | b64decode | regex_search(bbb_hostname, multiline=True, ignorecase=True) != bbb_hostname) or
    _bbb_install.changed or
    _bbb_upgrade.changed
  notify: restart bigbluebutton

- name: Update /etc/bigbluebutton akka configs
  become: true
  template:
    src: "{{ item }}"
    dest: "/etc/bigbluebutton/{{ item }}"
    owner: bigbluebutton
    group: root
    mode: '0600'
  loop:
    - bbb-apps-akka.conf
    - bbb-fsesl-akka.conf
  notify: restart bigbluebutton

- name: Update /etc/bigbluebutton/bbb-web.properties
  become: true
  template:
    src: bbb-web.properties
    dest: /etc/bigbluebutton/bbb-web.properties
    owner: bigbluebutton
    group: root
    mode: '0600'
  notify: restart bigbluebutton

- name: register bbb secret
  command: bbb-conf --secret
  changed_when: false
  register: result

- name: parse bbb secret
  set_fact:
    current_bbb_secret: "{{ result.stdout | regex_search('Secret: ([a-zA-Z0-9]*)', multiline=True) |  regex_replace('Secret: ') }}"
    cacheable: true

- name: set BBB secret
  command: "bbb-conf --setsecret {{ bbb_secret }}"
  when: bbb_secret is defined and bbb_secret != current_bbb_secret
  notify: restart bigbluebutton

- name: set bbb secret variable
  set_fact:
    bbb_secret: "{{ current_bbb_secret }}"
    cacheable: true
  when: not bbb_secret is defined

- name: serve recordings via https
  become: true
  lineinfile:
    path: /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml
    regexp: "playback_protocol"
    line: "playback_protocol: https"
  notify: restart bigbluebutton

- name: set note server to use HTTPS
  notify: restart bigbluebutton
  replace:
    path: /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
    regexp: 'http://'
    replace: 'https://'

- name: set kurento server to use HTTPS
  notify: restart bigbluebutton
  replace:
    path: /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
    regexp: 'ws://'
    replace: 'wss://'

- name: Read meteor
  slurp:
    path: /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
  register: r_meteor

- name: extract config of meteor
  set_fact:
    meteor: "{{ r_meteor['content'] | b64decode | from_yaml }}"

- name: combine meteor config
  set_fact:
    meteor: "{{ meteor | combine(bbb_meteor, recursive=true) }}"

- name: write back new meteor config
  copy:
    content: '{{ meteor  | to_nice_yaml }}'
    dest: /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
    mode: '0644'
  notify:
    - restart bigbluebutton

- name: configure CPU and IO Scheduling in FreeSWITCH service
  lineinfile:
    path: /lib/systemd/system/freeswitch.service
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    state: '{{ item.state }}'
    insertbefore: '^CPUSchedulingPriority='
  with_items:
    - line: 'CPUSchedulingPolicy=rr'
      regexp: '^#?CPUSchedulingPolicy='
      state: '{{ "present" if not bbb_container_compat | bool else "absent" }}'
    - line: 'IOSchedulingClass=realtime'
      regexp: '^#?IOSchedulingClass='
      state: '{{ "present" if not bbb_container_compat | bool else "absent" }}'
  notify:
  - restart freeswitch
  - reload systemd

- name: Set FreeSWITCH local IPv4
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="local_ip_v4=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="local_ip_v4={{ ansible_default_ipv4.address }}"/>'
  notify:
    - restart freeswitch
    - reload nginx

- name: enable IPv6 in FreeSWITCH service 1/2
  command:
    cmd: mv {{ item }}_ {{ item }}
    creates: "{{ item }}"
    removes: "{{ item }}_"
  with_items:
    - "/opt/freeswitch/etc/freeswitch/sip_profiles/internal-ipv6.xml"
    - "/opt/freeswitch/etc/freeswitch/sip_profiles/external-ipv6.xml"
  when: bbb_freeswitch_ipv6 | bool
  notify:
  - restart freeswitch
  - reload nginx

- name: enable IPv6 in FreeSWITCH service 2/2
  lineinfile:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    regexp: '<param name="listen-ip" value="[a-fA-F0-9.:]+"/>'
    line: '    <param name="listen-ip" value="::"/>'
  when: bbb_freeswitch_ipv6 | bool
  notify:
  - restart freeswitch
  - reload nginx

- name: disable IPv6 in FreeSWITCH service 1/2
  command:
    cmd: mv {{ item }} {{ item }}_
    creates: "{{ item }}_"
    removes: "{{ item }}"
  with_items:
    - "/opt/freeswitch/etc/freeswitch/sip_profiles/internal-ipv6.xml"
    - "/opt/freeswitch/etc/freeswitch/sip_profiles/external-ipv6.xml"
  when: not bbb_freeswitch_ipv6 | bool
  notify:
  - restart freeswitch
  - reload nginx

- name: disable IPv6 in FreeSWITCH service 2/2
  lineinfile:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    regexp: '<param name="listen-ip" value="[a-fA-F0-9.:]+"/>'
    line: '    <param name="listen-ip" value="127.0.0.1"/>'
  when: not bbb_freeswitch_ipv6 | bool
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH dialplan quality
  replace:
    path: /opt/freeswitch/conf/dialplan/default/bbb_conference.xml
    regexp: '<action application="conference" data="\$1@.*"\/>'
    replace: '<action application="conference" data="$1@{{ bbb_dialplan_quality }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH dialplan quality (echo)
  replace:
    path: /opt/freeswitch/conf/dialplan/default/bbb_echo_to_conference.xml
    regexp: '<action application="conference" data="\${vbridge}@.*"\/>'
    replace: '<action application="conference" data="${vbridge}@{{ bbb_dialplan_quality }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH dialplan energy-level
  replace:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    after: '<profile name="{{ bbb_dialplan_quality }}">'
    before: '</profile>'
    regexp: '<param name="energy-level" value=".*"\/>'
    replace: '<param name="energy-level" value="{{ bbb_dialplan_energy_level }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH dialplan comfort-noise
  replace:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    after:   '<profile name="{{ bbb_dialplan_quality }}">'
    before:  '</profile>'
    regexp:  '<param name="comfort-noise" value=".*"\/>'
    replace: '<param name="comfort-noise" value="{{ bbb_dialplan_comfort_noise }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH external ip (rtp)
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="external_rtp_ip=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="external_rtp_ip={{ bbb_freeswitch_external_ip }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: FreeSWITCH external ip (sip)
  replace:
    path: /opt/freeswitch/etc/freeswitch/vars.xml
    regexp:  '<X-PRE-PROCESS cmd="set" data="external_sip_ip=.*"\/>'
    replace: '<X-PRE-PROCESS cmd="set" data="external_sip_ip={{ bbb_freeswitch_external_ip }}"/>'
  notify:
  - restart freeswitch
  - reload nginx

- name: set nodejs options for the html5-webclient
  replace:
    path: /usr/share/meteor/bundle/systemd_start.sh
    regexp:  'PORT=3000 /usr/share/\$NODE_VERSION/bin/node.*main.js'
    replace: 'PORT=3000 /usr/share/$NODE_VERSION/bin/node {{ bbb_html5_node_options }} main.js'
  when: bbb_html5_node_options is defined
  notify: restart bigbluebutton

- name: unset nodejs options for the html5-webclient
  replace:
    path: /usr/share/meteor/bundle/systemd_start.sh
    regexp:  'PORT=3000 /usr/share/\$NODE_VERSION/bin/node.*main.js'
    replace: 'PORT=3000 /usr/share/$NODE_VERSION/bin/node main.js'
  when: not bbb_html5_node_options is defined
  notify: restart bigbluebutton

- name: Create overrides directory for bbb-html5 template services
  file:
    path: "/etc/systemd/system/{{ item }}.d"
    state: directory
    mode: '0644'
  loop:
    - bbb-html5-backend@.service
    - bbb-html5-frontend@.service
  when: bbb_container_compat

- name: Save override file for bbb-html5 template services
  copy:
    dest: "/etc/systemd/system/{{ item }}.d/override.conf"
    content: |
      [Service]
      # Set no scheduling policy in LXC, see https://docs.bigbluebutton.org/2.2/troubleshooting.html#bbb-html5-fails-to-start-with-a-setscheduler-error
      CPUSchedulingPolicy=other
      Nice=-10
    mode: '0644'
  loop:
    - bbb-html5-backend@.service
    - bbb-html5-frontend@.service
  when: bbb_container_compat
  notify:
    - reload systemd
    - restart bigbluebutton

- name: Remove override file for bbb-html5.service
  file:
    path: /etc/systemd/system/bbb-html5.service.d/override.conf
    state: absent
    mode: '0644'
  loop:
    - bbb-html5-backend@.service
    - bbb-html5-frontend@.service
  when: not bbb_container_compat
  notify:
    - reload systemd
    - restart bigbluebutton

- name: set default presentation
  become: true
  copy:
    src: "{{ bbb_custom_presentation }}"
    dest: "{{ bbb_nginx_root | regex_replace('\\/$', '') }}/{{ bbb_custom_presentation_name | default(bbb_custom_presentation) }}"
    mode: '0644'
  when: bbb_custom_presentation is defined

- name: Set cron.daily specifications
  become: true
  template:
    src: bbb-config/cron.daily/bigbluebutton
    dest: /etc/cron.daily/bigbluebutton
    mode: '0644'
    owner: root
    group: root
  notify:
    - reload systemd
    - restart bigbluebutton
    
